// Flexbox SCSS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// Complete Guide: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
// prefix wird automatisch generiert > nicht mehr n√∂tig


// Flexbox display
// values: flex | inline-flex
@mixin flex-display($display: flex){

  display: $display;
}

// Flex Flow Direction
// applies to: flex containers
// flex-direction: row | row-reverse | column | column-reverse
// default: row
@mixin flex-direction($direction: row){

  flex-direction: $direction;
}

// Flex Line Wrapping
// applies to: flex containers
// flex-wrap: nowrap | wrap | wrap-reverse
// default: nowrap
@mixin flex-wrap($wrap: nowrap){

  flex-wrap:  $wrap;
}

// Flex Flow values: This is the shorthand for:
// Flex Direction and Flex Wrap
// applies to: flex containers
// flex-flow: <flex-direction> || <flex-wrap>
// default: row nowrap
@mixin flex-flow($flow){

  flex-flow: $flow;
}

// Display Order
// applies to: flex items
// order value: <integer>
/* By default, flex items are laid out in the source order.
   However, the order property controls the order in which
   they appear in the flex container. (CSS-TRICKS) */
@mixin flex-order($order){
  // todo usage?

  order: $order;
}

// Flex grow factor
// applies to: flex items
// grow value: <number> | unitless, serves as proportion
// default: 0 = no growth
@mixin flex-grow($grow: 0){

  flex-grow: $grow;
}

// Flex shrink factor
// applies to: flex items
// value: <number> | 0 = no shrink
// default: 1 = shrink
@mixin flex-shrink($shrink: 1){

  flex-shrink: $shrink;
}

// Flex basis = initial main size of the flex item
// applies to: flex items
// value: <width> or <height>
// default: auto
@mixin flex-basis($width: auto){

  flex-basis: $width;
}

// flex values:
/* This is the shorthand for:
   flex-grow, flex-shrink and flex-basis - combined.
   The second and third parameters (flex-shrink and flex-basis)
   are optional. (CSS-TRICKS) */
// applies to: flex items
// value: <positive-number>, initial, auto, or none
// Default is 0 1 auto
@mixin flex($columns: initial){

  flex: $columns;
}

// Axis Alignment
// applies to: flex containers
// justify-content: flex-start | flex-end | center | space-between | space-around
// default: flex-start
@mixin justify-content($justify: flex-start){

  justify-content: $justify;
}

// Packing Flex Lines
// applies to: multi-line flex containers
// align-content: flex-start | flex-end | center | space-between | space-around | stretch
// default: stretch
@mixin align-content($align: stretch){

  align-content: $align;
}

// Cross-axis Alignment
// applies to: flex containers
// align-items: flex-start | flex-end | center | baseline | stretch
// default: stretch
@mixin align-items($align: stretch){

  align-items: $align;
}

// Cross-axis Alignment
// applies to: flex items
// align-self: auto | flex-start | flex-end | center | baseline | stretch
// default: overrides align-items values
@mixin align-self($align: auto){

  align-self: $align;
}